// R√©cup√©rer les variables d‚Äôenvironnement depuis Netlify
fetch("/.netlify/functions/env")
    .then(response => response.json())
    .then(env => {
        console.log("‚úÖ Variables Netlify r√©cup√©r√©es :", env);
        window.env = env;
    })
    .catch(error => {
        console.error("‚ùå Erreur lors de la r√©cup√©ration des variables d‚Äôenvironnement :", error);
    });

// V√©rifier le format et l'existence du num√©ro de t√©l√©phone
async function validatePhoneNumber(phoneNumber) {
    if (!window.env || !window.env.ABSTRACT_API_KEY) {
        console.error("‚ùå Cl√© API AbstractAPI manquante !");
        return { valid: false, message: "‚ùå Impossible de v√©rifier le num√©ro." };
    }

    let url = `https://phonevalidation.abstractapi.com/v1/?api_key=${window.env.ABSTRACT_API_KEY}&phone=${phoneNumber}`;

    try {
        let response = await fetch(url);
        let data = await response.json();
        console.log("üìû R√©sultat API AbstractAPI :", data);

        // V√©rifie si le num√©ro est valide et qu'il est bien d√©tect√© comme existant
        if (data.valid && data.number && data.number.length >= 10) {
            return { valid: true, message: "‚úÖ Num√©ro valide et existant." };
        } else {
            return { valid: false, message: "‚ùå Num√©ro invalide ou inexistant." };
        }
    } catch (error) {
        console.error("‚ùå Erreur API AbstractAPI :", error);
        return { valid: false, message: "‚ö† Erreur de connexion √† AbstractAPI." };
    }
}

// Envoyer un code de validation directement au JOUEUR via Telegram
async function sendVerificationCodeToPlayer(playerTelegram) {
    if (!playerTelegram.startsWith("@")) {
        alert("‚ùå Erreur : L'identifiant Telegram doit commencer par '@'. Exemple : @monpseudo");
        return false;
    }

    let verificationCode = Math.floor(100000 + Math.random() * 900000);
    window.verificationCode = verificationCode;

    let message = `üîë **Code de validation pour votre inscription :** ${verificationCode}\n\nüì© R√©pondez avec ce code sur le site pour finaliser votre inscription.`;
    let url = `https://api.telegram.org/bot${window.env.VITE_TELEGRAM_BOT_TOKEN}/sendMessage?chat_id=${playerTelegram}&text=${encodeURIComponent(message)}`;

    try {
        let response = await fetch(url);
        let data = await response.json();

        if (data.ok) {
            alert("üì© Un code de validation a √©t√© envoy√© sur votre Telegram !");
            document.getElementById("verification-section").style.display = "block";
            return true;
        } else {
            alert("‚ùå Erreur : Impossible d'envoyer le code via Telegram. V√©rifiez votre identifiant.");
            return false;
        }
    } catch (error) {
        console.error("‚ùå Erreur lors de l'envoi du code Telegram :", error);
        return false;
    }
}

// V√©rifier le code de validation saisi par le joueur
function validateTelegramCode() {
    let userCode = document.getElementById("verification-code").value;
    if (parseInt(userCode) === window.verificationCode) {
        alert("‚úÖ Code valid√© !");
        window.telegramVerified = true;
    } else {
        alert("‚ùå Code incorrect. Veuillez r√©essayer.");
    }
}

// Envoyer les questions du jeu au JOUEUR
async function sendGameQuestionsToPlayer(playerTelegram) {
    let message = `üéÆ **Bienvenue dans le Grand Jeu Immersif !**\n\nüí¨ Voici ta premi√®re √©nigme :\n\n"Quelle est la couleur du cheval blanc d'Henri IV ?" üèá\n\nR√©ponds directement ici pour continuer l‚Äôaventure !`;

    let url = `https://api.telegram.org/bot${window.env.VITE_TELEGRAM_BOT_TOKEN}/sendMessage?chat_id=${playerTelegram}&text=${encodeURIComponent(message)}`;

    try {
        let response = await fetch(url);
        let data = await response.json();
        return data.ok ? alert("üì© Questions envoy√©es au joueur !") : alert("‚ùå Erreur Telegram.");
    } catch (error) {
        console.error("‚ùå Erreur lors de l'envoi des questions :", error);
    }
}

// V√©rifier et envoyer les informations
window.testTelegram = async function () {
    let teamName = document.getElementById("team-name").value;
    let phoneNumber = document.getElementById("phone-number").value;
    let playerTelegram = document.getElementById("telegram-username").value;
    let participants = document.getElementById("participants").value;

    if (!teamName || !phoneNumber || !playerTelegram || !participants) {
        alert("‚ùå Erreur : Remplissez tous les champs !");
        return;
    }

    let validation = await validatePhoneNumber(phoneNumber);
    if (!validation.valid) {
        alert(validation.message);
        return;
    }

    let codeSent = await sendVerificationCodeToPlayer(playerTelegram);
    if (!codeSent) return;

    // Attendre que le joueur valide son code avant de continuer
    let checkInterval = setInterval(() => {
        if (window.telegramVerified) {
            clearInterval(checkInterval);

            let message = `üìå **Nouvelle Inscription !**\nüë• **√âquipe** : ${teamName}\nüìû **T√©l√©phone** : ${phoneNumber}\nüéüÔ∏è **Participants** : ${participants}\nüí¨ **Telegram Joueur** : ${playerTelegram}`;
            let url = `https://api.telegram.org/bot${window.env.VITE_TELEGRAM_BOT_TOKEN}/sendMessage?chat_id=${window.env.VITE_TELEGRAM_CHAT_ID}&text=${encodeURIComponent(message)}`;

            fetch(url)
                .then(response => response.json())
                .then(data => alert(data.ok ? "‚úÖ Inscription valid√©e !" : "‚ùå Erreur Telegram."))
                .catch(error => alert("‚ùå Erreur r√©seau :", error));

            // Une fois valid√©, envoyer les questions du jeu au joueur
            sendGameQuestionsToPlayer(playerTelegram);
        }
    }, 1000);
};

console.log("‚úÖ script.js charg√© !");
